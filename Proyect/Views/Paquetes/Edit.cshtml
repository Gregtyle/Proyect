@model Proyect.Models.Paquete

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Editar</h1>

<h4>Paquete</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdPaquete" />
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descripcion" class="control-label"></label>
                <input asp-for="Descripcion" class="form-control" />
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Seleccione los Servicios</label>
                @foreach (var servicio in ViewData["Servicios"] as IEnumerable<dynamic>)
                {
                    <div>
                        <input type="checkbox"
                               name="ServiciosSeleccionados"
                               value="@servicio.IdServicio"
                               class="servicioCheckbox"
                               data-precio="@servicio.Precio"
                               id="servicio_@servicio.IdServicio"
                        @(servicio.Seleccionado ? "checked" : "") />
                        <label for="servicio_@servicio.IdServicio">@servicio.Nombre (Precio: $@servicio.Precio)</label>
                    </div>
                }
            </div>

            <div class="form-group">
                <label class="control-label">Seleccione las Habitaciones</label>
                @foreach (var habitacion in ViewData["Habitaciones"] as IEnumerable<dynamic>)
                {
                    <div>
                        <input type="checkbox"
                               name="HabitacionesSeleccionadas"
                               value="@habitacion.IdHabitacion"
                               class="habitacionCheckbox"
                               data-precio="@habitacion.Precio"
                               id="habitacion_@habitacion.IdHabitacion"
                        @(habitacion.Seleccionado ? "checked" : "") />
                        <label for="habitacion_@habitacion.IdHabitacion">@habitacion.Nombre (Precio: $@habitacion.Precio)</label>
                    </div>
                }
            </div>
            <div class="form-group">
                <label asp-for="Precio" class="control-label"></label>
                <input asp-for="Precio" id="total" name="PrecioTotal" value="@ViewData["PrecioTotal"]" class="form-control" readonly />
                <span asp-validation-for="Precio" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Estado" /> @Html.DisplayNameFor(model => model.Estado)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Función para actualizar el precio total
        function actualizarPrecioTotal() {
            let total = 0;

            // Sumar precios de servicios seleccionados
            document.querySelectorAll('.servicioCheckbox:checked').forEach(item => {
                total += parseFloat(item.getAttribute('data-precio')) || 0;
            });

            // Sumar precios de habitaciones seleccionadas
            document.querySelectorAll('.habitacionCheckbox:checked').forEach(item => {
                total += parseFloat(item.getAttribute('data-precio')) || 0;
            });

            // Actualizar el campo de precio total
            document.getElementById('total').value = total.toFixed(0);
        }

        // Escuchar cambios en los checkboxes de servicios y habitaciones
        document.querySelectorAll('.servicioCheckbox, .habitacionCheckbox').forEach(checkbox => {
            checkbox.addEventListener('change', actualizarPrecioTotal);
        });

        // Inicializar precio total al cargar la página
        document.addEventListener('DOMContentLoaded', actualizarPrecioTotal);
    </script>
}
