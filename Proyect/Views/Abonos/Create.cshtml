@model Proyect.Models.Abono

@{
    ViewData["Title"] = "Crear Abono";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="Tituloscentro">Crear Nuevo Abono</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Formulario de Abono</h6>
        </div>
        <div class="card-body">
            <form asp-action="Create" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="IdReserva" class="control-label">Id Reserva</label>
                    <input asp-for="IdReserva" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label asp-for="Valordeuda" class="control-label">Valor Deuda</label>
                    <input asp-for="Valordeuda" class="form-control" readonly value="@Model.Valordeuda.ToString("0")" />
                </div>

                <div class="form-group">
                    <label for="PendienteActual" class="control-label">Pendiente</label>
                    <input type="text" class="form-control" id="PendienteActual" readonly value="@Model.Pendiente.ToString("0")" />
                </div>

                <div class="form-group">
                    <label asp-for="ValorAbono" class="control-label">Valor Abono</label>
                    <input asp-for="ValorAbono" class="form-control" id="ValorAbono" oninput="calcularPendienteYPorcentaje()" />
                    <span asp-validation-for="ValorAbono" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="PorcentajePago" class="control-label">Porcentaje del Pago</label>
                    <input type="text" class="form-control" id="PorcentajePago" readonly value="0 %" />
                </div>

                <div class="form-group">
                    <label asp-for="Comprobante" class="control-label">Comprobante</label>
                    <input class="form-control" type="file" id="Comprobante" name="comprobanteFile" accept="image/*" onchange="previewImage(event)" />
                    <span asp-validation-for="Comprobante" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Imagen del Comprobante</label>
                    <div id="imageContainer" style="width: 100%; height: 300px; border: 1px solid #ccc; padding: 10px; overflow: hidden;">
                        <!-- La imagen se mostrará aquí -->
                    </div>
                </div>

                <div class="card-footer text-center">
                    <button type="submit" class="btn ov-btn-slide-left btn-sm">
                        <i class="fas fa-save"></i> Crear Abono
                    </button>
                    <a asp-action="Index" asp-route-idReserva="@Model.IdReserva" class="btn ov-btn-slide-left-gray btn-sm ml-3">
                        <i class="fas fa-arrow-left"></i> Volver a la lista
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        function calcularPendienteYPorcentaje() {
            const pendienteInicial = parseFloat("@Model.Pendiente") || 0;
            const deudaTotal = parseFloat("@Model.Valordeuda") || 0;

            let valorAbono = parseFloat(document.getElementById("ValorAbono").value) || 0;

            // Validar que el valor del abono no exceda el pendiente
            if (valorAbono > pendienteInicial) {
                document.getElementById("ValorAbono").setCustomValidity("El valor del abono no puede exceder el saldo pendiente.");
            } else {
                document.getElementById("ValorAbono").setCustomValidity("");
            }

            // Calcular el nuevo pendiente
            const nuevoPendiente = Math.max(0, pendienteInicial - valorAbono);
            document.getElementById("PendienteActual").value = nuevoPendiente.toLocaleString('es-CO', {
                style: 'currency',
                currency: 'COP'
            });

            // Calcular el porcentaje del pago
            const porcentajePago = deudaTotal > 0 ? (valorAbono / deudaTotal) * 100 : 0;
            document.getElementById("PorcentajePago").value = porcentajePago.toFixed(2) + " %";
        }

        function previewImage(event) {
            const imageContainer = document.getElementById('imageContainer');
            const file = event.target.files[0]; // Obtener solo la primera imagen

            // Limpiar el contenedor antes de agregar la nueva imagen
            imageContainer.innerHTML = '';

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '100%';
                    img.style.height = '100%';
                    img.style.objectFit = 'contain'; // Mostrar la imagen completa dentro del contenedor
                    imageContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
        }

        // Actualizar dinámicamente los valores al escribir
        document.getElementById("ValorAbono").addEventListener("input", calcularPendienteYPorcentaje);

        // Inicializar valores al cargar la página
        window.onload = function () {
            calcularPendienteYPorcentaje();
        };
    </script>
}
