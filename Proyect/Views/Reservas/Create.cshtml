@model Proyect.Models.Reserva

@{
    ViewData["Title"] = "Crear Reserva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="page-title">Crear Nueva Reserva</h1>

<div class="create-container">
    <div class="card">
        <div class="card-header text-white bg-primary">
            <h4>Formulario de Reserva</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create" id="createReservaForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <!-- Selección de Cliente y Usuario -->
                <!-- Búsqueda del Cliente por Documento -->
                <div class="form-group">
                    <label for="DocumentoCliente" class="control-label">Documento del Cliente</label>
                    <input type="text" id="DocumentoCliente" class="form-control" placeholder="Ingrese el documento del cliente" />
                    <button type="button" class="btn btn-info" id="buscarCliente">Buscar Cliente</button>
                </div>

                <!-- Mostrar Información del Cliente -->
                <div id="clienteInfo" style="display:none;">
                    <h5>Datos del Cliente:</h5>
                    <p><strong>Nombre:</strong> <span id="clienteNombre"></span></p>
                    <p><strong>Apellido:</strong> <span id="clienteApellido"></span></p>
                    <p><strong>Celular:</strong> <span id="clienteCelular"></span></p>
                    <p><strong>Correo:</strong> <span id="clienteCorreo"></span></p>

                    <!-- Asignar el cliente encontrado a la reserva -->
                    <input type="hidden" id="IdCliente" name="IdCliente" />
                </div>
                <!-- Botón para abrir el modal de crear cliente -->
                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#createClienteModal">
                    Crear Cliente
                </button>


        
                <!-- Selección de Fecha de Inicio y Fecha Fin -->
                <div class="form-group">
                    <label asp-for="FechaInicio" class="control-label">Fecha de Inicio</label>
                    <input asp-for="FechaInicio" class="form-control" type="date" id="fechaInicio" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="FechaInicio" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FechaFin" class="control-label">Fecha de Fin</label>
                    <input asp-for="FechaFin" class="form-control" type="date" id="fechaFin" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="FechaFin" class="text-danger"></span>
                </div>

                <!-- Selección de Paquete y Precio -->
                <div class="form-group">
                    <label asp-for="IdPaquete" class="control-label">Paquete</label>
                    <select asp-for="IdPaquete" class="form-control" id="IdPaquete" asp-items="ViewBag.IdPaquete">
                        <option value="">-- Seleccionar Paquete --</option>
                    </select>
                    <span asp-validation-for="IdPaquete" class="text-danger"></span>
                </div>

                <!-- Precio Paquete -->
                <div class="form-group">
                    <label for="PrecioPaquete">Precio Paquete</label>
                    <input type="text" id="PrecioPaquete" class="form-control" readonly />
                </div>

                <!-- Mostrar los servicios disponibles con checkboxes -->
                <div class="form-group">
                    <label>Servicios</label>
                    <div id="servicios">
                        @foreach (var servicio in ViewBag.Servicios)
                        {
                            <div>
                                <input type="checkbox" name="ServiciosSeleccionados" value="@servicio.IdServicio" />
                                @servicio.Nombre - @servicio.Precio.ToString("C2", new System.Globalization.CultureInfo("es-CO"))
                            </div>
                        }
                    </div>
                </div>

                <!-- Método de Pago y Estado de Reserva -->
                <div class="form-group">
                    <label asp-for="IdMetodoPago" class="control-label">Método de Pago</label>
                    <select asp-for="IdMetodoPago" class="form-control" asp-items="ViewBag.IdMetodoPago"></select>
                    <span asp-validation-for="IdMetodoPago" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Descuento" class="control-label">Descuento (%)</label>
                    <input asp-for="Descuento" class="form-control" />
                    <span asp-validation-for="Descuento" class="text-danger"></span>
                </div>

                <!-- Subtotal -->
                <div class="form-group">
                    <label>Subtotal</label>
                    <input type="text" id="subtotal" class="form-control" readonly />
                    <input type="hidden" name="Subtotal" id="hiddenSubtotal" />
                </div>

                <!-- IVA (19%) -->
                <div class="form-group">
                    <label>IVA (19%)</label>
                    <input type="text" id="iva" class="form-control" readonly />
                    <input type="hidden" name="Iva" id="hiddenIva" />
                </div>

                <!-- Total -->
                <div class="form-group">
                    <label>Total</label>
                    <input asp-for="Total" class="form-control" id="total" readonly />
                    <input type="hidden" name="Total" id="hiddenTotal" />
                    <span asp-validation-for="Total" class="text-danger"></span>
                </div>

                <!-- Botón de Crear -->
                <div class="form-group text-center">
                    <input type="submit" value="Crear Reserva" class="btn btn-primary btn-lg" />
                </div>
            </form>
        </div>
        <div class="card-footer text-center">
            <a asp-action="Index" class="btn btn-secondary btn-sm">Volver a la lista</a>
        </div>
    </div>
</div>
<!-- Modal para Crear Cliente -->
<div class="modal fade" id="createClienteModal" tabindex="-1" role="dialog" aria-labelledby="createClienteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createClienteModalLabel">Crear Cliente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Clientes/_CreateClienteForm.cshtml", new Proyect.Models.Cliente())

            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Html.Partial("_ValidationScriptsPartial");
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Configuración de restricciones de fecha
        function setupDateConstraints() {
            var today = new Date().toISOString().split("T")[0];
            document.getElementById("fechaInicio").setAttribute("min", today);
            document.getElementById("fechaFin").setAttribute("min", today);
        }

        document.getElementById("fechaInicio").addEventListener("change", function () {
            document.getElementById("fechaFin").setAttribute("min", this.value);
        });

        setupDateConstraints();

        // Convertir ViewBag.Paquetes y ViewBag.Servicios a JSON
        var paquetes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Paquetes));
        var servicios = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Servicios));

        // Actualizar precio del paquete y subtotal
        document.getElementById("IdPaquete").addEventListener("change", function () {
            var paqueteId = parseInt(this.value);
            var precioPaqueteField = document.getElementById("PrecioPaquete");
            var subtotalField = document.getElementById("subtotal");

            var selectedPaquete = paquetes.find(p => p.IdPaquete === paqueteId);

            if (selectedPaquete) {
                // Mostrar el precio del paquete seleccionado en tiempo real
                precioPaqueteField.value = selectedPaquete.Precio.toFixed(2);
                subtotalField.value = selectedPaquete.Precio.toFixed(2);
            } else {
                precioPaqueteField.value = "";
                subtotalField.value = "";
            }

            // Actualizar IVA y Total
            updateTotals();
        });

        // Actualizar el subtotal, IVA y total al aplicar un descuento
        document.getElementById("Descuento").addEventListener("input", function () {
            updateTotals();
        });

        // Agregar la lógica para los servicios seleccionados
        var servicioPrecios = {};
        servicios.forEach(function (servicio) {
            servicioPrecios[servicio.IdServicio] = servicio.Precio;
        });

        // Función para actualizar el subtotal considerando los servicios
        function updateTotals() {
            var precioPaquete = parseFloat(document.getElementById("PrecioPaquete").value) || 0;
            var descuento = parseFloat(document.getElementById("Descuento").value) || 0;
            var totalServicios = 0;

            // Sumar el precio de los servicios seleccionados
            var serviciosSeleccionados = document.querySelectorAll('input[name="ServiciosSeleccionados"]:checked');
            serviciosSeleccionados.forEach(function (checkbox) {
                var idServicio = parseInt(checkbox.value);
                if (servicioPrecios[idServicio]) {
                    totalServicios += servicioPrecios[idServicio];
                }
            });

            // Calcular el subtotal aplicando el descuento
            var subtotalConDescuento = (precioPaquete + totalServicios) * (1 - descuento / 100);
            var iva = subtotalConDescuento * 0.19;
            var total = subtotalConDescuento + iva;

            // Actualizar campos de subtotal, IVA y total visibles y ocultos
            document.getElementById("subtotal").value = subtotalConDescuento.toFixed(2);
            document.getElementById("iva").value = iva.toFixed(2);
            document.getElementById("total").value = total.toFixed(2);

            document.getElementById("hiddenSubtotal").value = subtotalConDescuento.toFixed(2);
            document.getElementById("hiddenIva").value = iva.toFixed(2);
            document.getElementById("hiddenTotal").value = total.toFixed(2);
        }

        // Escuchar el cambio en los checkboxes de los servicios
        document.querySelectorAll('input[name="ServiciosSeleccionados"]').forEach(function (checkbox) {
            checkbox.addEventListener('change', updateTotals);
        });

        // AJAX para buscar el cliente por documento
        document.getElementById('buscarCliente').addEventListener('click', function () {
            var documento = document.getElementById('DocumentoCliente').value;

            if (!documento) {
                alert("Por favor ingrese un número de documento.");
                return;
            }

            // Realizar la petición AJAX al controlador
            fetch('/Reservas/BuscarClientePorDocumento?documento=' + documento)
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        // Mostrar los datos del cliente en la vista
                        document.getElementById('clienteNombre').textContent = data.nombre;
                        document.getElementById('clienteApellido').textContent = data.apellido;
                        document.getElementById('clienteCelular').textContent = data.celular;
                        document.getElementById('clienteCorreo').textContent = data.correoElectronico;

                        // Asignar el IdCliente al formulario
                        document.getElementById('IdCliente').value = data.idCliente;

                        // Mostrar la información del cliente
                        document.getElementById('clienteInfo').style.display = 'block';
                    } else {
                        alert("Cliente no encontrado.");
                    }
                })
                .catch(error => {
                    alert("Error al buscar el cliente: " + error);
                });
        });

        // Evento para el envío del formulario en el modal (crear cliente)
        $(document).ready(function () {
            $('#createClienteForm').submit(function (event) {
                event.preventDefault();
                var formData = $(this).serialize(); // Serializa el formulario

                $.ajax({
                    url: '@Url.Action("CreateFromModal", "Clientes")', // Acción para crear el cliente desde el modal
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert('Cliente creado exitosamente.');
                            $('#createClienteModal').modal('hide'); // Cerrar el modal

                            // Mostrar el mensaje de éxito en la vista principal (Reserva)
                            alert('Cliente creado con éxito. Ahora puedes asignarlo a la reserva.');

                            // Aquí actualizas la vista de cliente en la página de creación de la reserva si es necesario
                            // Por ejemplo, podrías actualizar los campos de cliente con la información del nuevo cliente

                        } else {
                            alert(response.message); // Mostrar el error si no fue exitoso
                        }
                    },
                    error: function () {
                        alert('Ocurrió un error al crear el cliente.');
                    }
                });
            });
        });
    </script>
}
