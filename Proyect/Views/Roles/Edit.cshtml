@model Proyect.Models.Role

@{
    ViewData["Title"] = "Edit Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Editar Rol</h1>
<hr />

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Campo oculto para el Id del Rol -->
            <input type="hidden" asp-for="IdRol" />


            <div class="form-group">
                <label asp-for="NombreRol" class="control-label"></label>
                <!-- Ya no debería tener validación para ser obligatorio -->
                <input asp-for="NombreRol" class="form-control" readonly />
                <span asp-validation-for="NombreRol" class="text-danger"></span>
            </div>

            <!-- Descripción del Rol -->
            <div class="form-group">
                <label asp-for="Descripcion" class="control-label"></label>
                <input asp-for="Descripcion" class="form-control" />
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>

            <!-- Botón de seleccionar/deseleccionar todos los permisos -->
            <button type="button" id="toggleSelectAll" class="btn btn-secondary mb-3">Seleccionar Todos</button>

            <!-- Permisos asociados al Rol (Checkboxes) -->
            <div class="form-group">
                <label class="control-label">Permisos</label>
                @if (ViewData["Permisos"] is List<Proyect.Models.Permiso> permisos && permisos.Any())
                {
                    foreach (var permiso in permisos)
                    {
                        <div class="form-check">
                            <input type="checkbox"
                                   class="form-check-input"
                                   name="selectedPermisos"
                                   value="@permiso.IdPermiso"
                            @if (ViewData["SelectedPermisos"] is List<int> selectedPermisos && selectedPermisos.Contains(permiso.IdPermiso))
                            {
                                @:checked
                            } />
                            <label class="form-check-label">@permiso.NombrePermiso</label>
                        </div>
                    }

                }

            </div>


            <button type="submit" class="btn btn-primary">Guardar Cambios</button><br />
            <div>
                <a asp-action="Index">Volver a la lista de Roles</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
             // Lógica para el botón de Seleccionar/Deseleccionar Todos
             document.getElementById("toggleSelectAll").addEventListener("click", function () {
                 // Obtener todos los checkboxes
                 var checkboxes = document.querySelectorAll(".form-check-input");

                 // Verificar si todos los checkboxes están seleccionados
                 var allChecked = Array.from(checkboxes).every(function (checkbox) {
                     return checkbox.checked;
                 });

                 // Alternar el estado de todos los checkboxes (marcarlos o desmarcarlos)
                 checkboxes.forEach(function (checkbox) {
                     checkbox.checked = !allChecked; // Si todos estaban seleccionados, desmarcamos, si no, marcamos
                 });

                 // Cambiar el texto del botón dependiendo de la acción
                 document.getElementById("toggleSelectAll").textContent = allChecked ? "Seleccionar Todos" : "Deseleccionar Todos";
             });
    </script>
};