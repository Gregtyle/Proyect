@model IEnumerable<Proyect.Models.Role>

@{
    ViewData["Title"] = "Roles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Roles</h1>

<p class="text-end">
    <a asp-action="Create" class="btn btn-custom"><i class="bi bi-plus-square"></i> Crear</a>
</p>

<!-- Mostrar mensajes de error o éxito -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}

<table class="table" id="RolesTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.NombreRol)</th>
            <th>@Html.DisplayNameFor(model => model.Descripcion)</th>
            <th>@Html.DisplayNameFor(model => model.Estado)</th> <!-- Nueva columna para el estado -->
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.NombreRol)</td>
                <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                <td>
                    <!-- Aquí usamos el botón con el mismo estilo de estado que en el primer código -->
                    <label class="switch">
                        <input type="checkbox" class="status-toggle" data-id="@item.IdRol" @(item.Estado ? "checked" : "")>
                        <span class="slider"></span>
                    </label>
                </td>
                <td class="action-icons">
                    <!-- Reemplazo de botones con las nuevas acciones -->
                    <a asp-action="Edit" asp-route-id="@item.IdRol" class="btn btn-icon" data-toggle="tooltip" title="Editar">
                        <i class="bi bi-pencil-square"></i>
                    </a> |
                    <a asp-action="Details" asp-route-id="@item.IdRol" class="btn btn-icon" data-toggle="tooltip" title="Detalles">
                        <i class="bi bi-info-lg"></i>
                    </a> |
                    <a asp-action="Delete" asp-route-id="@item.IdRol" class="btn btn-icon" data-toggle="tooltip" title="Eliminar">
                        <i class="bi bi-trash"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#RolesTable').DataTable({
                scrollX: true,
                language: {
                    "sLengthMenu": "Mostrar _MENU_ entradas",
                    "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                    "sSearch": "Buscar:",
                    "emptyTable": "NO HAY NINGUN ELEMENTO EN LA TABLA",
                    "sInfo": "Mostrando START a END de TOTAL entradas"
                }
            });
        });

        // Lógica para cambiar el estado de un rol usando AJAX
        $(document).on('change', '.status-toggle', function () {
            var roleId = $(this).data('id');
            var estado = $(this).prop('checked');

            // Llamada AJAX para actualizar el estado
            $.ajax({
                url: '@Url.Action("ActualizarEstado", "Roles")',
                type: 'POST',
                data: {
                    id: roleId,
                    estado: estado
                },
                success: function (response) {
                    alert("Estado actualizado correctamente");
                },
                error: function () {
                    alert("Error al cambiar el estado del rol.");
                }
            });
        });
    </script>
}
